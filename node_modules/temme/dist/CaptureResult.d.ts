import { Capture, Dict } from './interfaces';
import { FilterFn } from './filters';
import { ModifierFn } from './modifiers';
export declare class CaptureResult {
    readonly filterDict: Dict<FilterFn>;
    readonly modifierDict: Dict<ModifierFn>;
    private readonly result;
    constructor(filterDict: Dict<FilterFn>, modifierDict: Dict<ModifierFn>);
    get(key: string): any;
    set(key: string, value: any): void;
    add(capture: Capture, value: any): void;
    forceAdd(capture: Capture, value: any): void;
    private exec;
    getResult(): any;
    private applyFilter;
    private applyFilterList;
}
